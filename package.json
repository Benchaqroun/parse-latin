{
  "name": "parse-latin",
  "version": "0.4.2",
  "description": "Latin-script (natural language) parser",
  "license": "MIT",
  "keywords": [
    "nlcst",
    "latin",
    "script",
    "natural",
    "language",
    "parser"
  ],
  "dependencies": {
    "array-iterate": "^0.1.0",
    "nlcst-to-string": "^0.1.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/wooorm/parse-latin.git"
  },
  "author": "Titus Wormer <tituswormer@gmail.com>",
  "devDependencies": {
    "chalk": "^0.5.0",
    "diff": "^1.0.0",
    "eslint": "^0.10.0",
    "istanbul": "^0.3.0",
    "jscs": "^1.0.0",
    "matcha": "^0.6.0",
    "mocha": "^2.0.0",
    "nlcst-test": "^0.2.0",
    "regenerate": "^1.0.0",
    "unicode-7.0.0": "^0.1.0"
  },
  "scripts": {
    "test": "node_modules/.bin/_mocha --reporter spec --check-leaks -u exports test/index.js",
    "test-travis": "node_modules/.bin/istanbul cover node_modules/.bin/_mocha --report lcovonly -- --reporter spec --check-leaks -u exports test/index.js",
    "coverage": "node_modules/.bin/istanbul cover node_modules/.bin/_mocha -- -- test/index.js",
    "lint-api": "node_modules/.bin/eslint index.js lib/*.js",
    "lint-plugin": "node_modules/.bin/eslint lib/plugin/*.js --rule 'consistent-return: false'",
    "lint-test": "node_modules/.bin/eslint test/index.js --env mocha",
    "lint-benchmark": "node_modules/.bin/eslint benchmark.js --global suite,set,bench",
    "lint-script": "node_modules/.bin/eslint script/build-expressions.js script/generate-fixture.js",
    "lint-style": "node_modules/.bin/jscs {script,test,.}/*.js lib/plugin/*.js lib/{modifier,parse-latin,parser,plugin,tokenizer}.js --reporter=inline",
    "lint": "npm run lint-api && npm run lint-plugin && npm run lint-script && npm run lint-test && npm run lint-benchmark && npm run lint-style",
    "make": "npm run lint && npm run coverage",
    "benchmark": "node_modules/.bin/matcha benchmark.js",
    "fixture": "node script/generate-fixture",
    "build-expressions": "node script/build-expressions",
    "build": "npm run build-expressions",
    "prepublish": "npm run build"
  }
}
